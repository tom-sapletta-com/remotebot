# Remote Automation - Konfiguracja środowiska
# Skopiuj ten plik jako .env i dostosuj wartości

# ================================
# VNC Desktop Configuration
# ================================

# Hasło dostępu do VNC (zmień!)
VNC_PASSWORD=automation

# Rozdzielczość ekranu (format: WIDTHxHEIGHT)
VNC_GEOMETRY=1280x800

# Głębia kolorów (16, 24, 32)
VNC_DEPTH=24

# Port VNC Server
VNC_PORT=5901

# Port noVNC (dostęp przez przeglądarkę)
NO_VNC_PORT=6080

# Numer display
DISPLAY=:1

# ================================
# Ollama Configuration
# ================================

# Port API Ollama
OLLAMA_PORT=11434

# Model AI Vision do użycia (domyślny)
# Opcje: llava:7b, llava:13b, moondream, bakllava
OLLAMA_MODEL=llava:7b

# Maksymalna liczba równoczesnych requestów
OLLAMA_NUM_PARALLEL=1

# Maksymalna liczba załadowanych modeli
OLLAMA_MAX_LOADED_MODELS=1

# Context window size
OLLAMA_NUM_CTX=2048

# Timeout dla requestów (sekundy)
OLLAMA_REQUEST_TIMEOUT=120

# ================================
# Automation Controller
# ================================

# Poziom logowania (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Katalog na wyniki testów
RESULTS_DIR=./results

# Katalog na logi
LOGS_DIR=./logs

# Katalog współdzielony
SHARED_DIR=./shared

# Timeout dla połączeń VNC (sekundy)
VNC_CONNECT_TIMEOUT=30

# Domyślny delay między akcjami (sekundy)
DEFAULT_ACTION_DELAY=0.5

# ================================
# Portainer (opcjonalnie)
# ================================

# Port Portainer Web UI
PORTAINER_PORT=9000

# Włącz/wyłącz Portainer (true/false)
ENABLE_PORTAINER=true

# ================================
# Docker Configuration
# ================================

# Nazwa projektu (prefix dla kontenerów)
COMPOSE_PROJECT_NAME=remote-automation

# Network subnet
DOCKER_NETWORK_SUBNET=172.20.0.0/16

# ================================
# Performance Tuning
# ================================

# Limity pamięci dla kontenerów (opcjonalne)
# Użyj formatu: 512m, 1g, 2g, etc.

# VNC Desktop RAM limit
VNC_MEMORY_LIMIT=2g

# Ollama RAM limit (zwiększ dla większych modeli)
OLLAMA_MEMORY_LIMIT=4g

# Controller RAM limit
CONTROLLER_MEMORY_LIMIT=1g

# CPU limits (optional, format: 0.5, 1, 2)
VNC_CPU_LIMIT=2
OLLAMA_CPU_LIMIT=4
CONTROLLER_CPU_LIMIT=1

# ================================
# Development Settings
# ================================

# Włącz tryb debug (więcej logów)
DEBUG_MODE=false

# Zapisuj screenshoty podczas testów
SAVE_SCREENSHOTS=true

# Katalog na debug screenshots
SCREENSHOTS_DIR=./debug_screenshots

# Automatyczny restart kontenerów po błędzie
AUTO_RESTART=unless-stopped

# ================================
# Security Settings
# ================================

# Użytkownik w kontenerze VNC (nie zmieniaj bez potrzeby)
VNC_USER=automation
VNC_UID=1000
VNC_GID=1000

# Ograniczenie dostępu VNC tylko do localhost (true/false)
VNC_LOCALHOST_ONLY=false

# ================================
# Network Settings
# ================================

# Host dla VNC (nazwa kontenera)
VNC_HOST=vnc-desktop

# Host dla Ollama (nazwa kontenera)
OLLAMA_HOST=ollama

# ================================
# Backup Settings
# ================================

# Automatyczne backupy wyników (true/false)
AUTO_BACKUP=false

# Katalog backupów
BACKUP_DIR=./backups

# ================================
# Timezone
# ================================

# Strefa czasowa dla kontenerów
TZ=Europe/Warsaw

# ================================
# Advanced: Custom Scripts
# ================================

# Ścieżka do custom startup script (opcjonalne)
CUSTOM_STARTUP_SCRIPT=

# Ścieżka do custom test scenarios
CUSTOM_SCENARIOS_DIR=./test_scenarios

# ================================
# Ollama Models - Auto Download
# ================================

# Automatycznie pobierz modele przy starcie (oddzielone spacją)
OLLAMA_AUTO_PULL_MODELS=llava:7b

# Dodatkowe modele do pobrania (opcjonalne)
# Przykład: OLLAMA_EXTRA_MODELS="moondream bakllava"
OLLAMA_EXTRA_MODELS=

# ================================
# Monitoring & Healthchecks
# ================================

# Interwał healthcheck (sekundy)
HEALTHCHECK_INTERVAL=30

# Timeout healthcheck (sekundy)
HEALTHCHECK_TIMEOUT=10

# Liczba prób przed uznaniem za unhealthy
HEALTHCHECK_RETRIES=3

# ================================
# Testing Configuration
# ================================

# Domyślny timeout dla testów (sekundy)
TEST_TIMEOUT=300

# Maksymalna liczba równoczesnych testów
MAX_PARALLEL_TESTS=1

# Generuj raport HTML z testów
GENERATE_HTML_REPORT=true

# ================================
# Experimental Features
# ================================

# Włącz eksperymentalne funkcje (true/false)
ENABLE_EXPERIMENTAL=false

# GPU acceleration dla Ollama (wymaga nvidia-docker)
ENABLE_GPU=false

# ================================
# Notes
# ================================

# Po zmianie tego pliku, zrestartuj środowisko:
# docker-compose down
# docker-compose up -d

# Sprawdź czy zmienne są poprawnie wczytane:
# docker-compose config
